rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAnonymousUser() {
      return request.auth.token.firebase.sign_in_provider == 'anonymous';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isToday(timestamp) {
      let today = timestamp.date();
      let lastSubmission = resource.data.lastSubmission.date();
      return today.year() == lastSubmission.year()
        && today.month() == lastSubmission.month()
        && today.day() == lastSubmission.day();
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && isOwner(userId);
      allow create: if isAuthenticated() && isAnonymousUser();
      allow update: if isAuthenticated() && isOwner(userId);
    }

    // Artworks collection
    match /artworks/{artworkId} {
      allow read: if true; // Anyone can view artworks
      allow create: if isAuthenticated()
        && isAnonymousUser()
        && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() 
        && (
          // Only allow updating the likes field
          request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'likedBy'])
          // Ensure likes can only be incremented or decremented by 1
          && (
            (request.resource.data.likes == resource.data.likes + 1 && !resource.data.likedBy.hasAny([request.auth.uid]))
            || (request.resource.data.likes == resource.data.likes - 1 && resource.data.likedBy.hasAny([request.auth.uid]))
          )
          // Ensure likedBy array is properly updated
          && (
            (request.resource.data.likedBy.hasAll(resource.data.likedBy) && request.resource.data.likedBy.hasAll([request.auth.uid]))
            || (resource.data.likedBy.hasAll(request.resource.data.likedBy) && !request.resource.data.likedBy.hasAny([request.auth.uid]))
          )
        );
      allow delete: if false; // Artworks cannot be deleted
    }

    // System collection (for prompts)
    match /system/{document=**} {
      allow read: if true; // Anyone can read prompts
      allow write: if false; // Only admin can write (via Cloud Functions)
    }
  }
} 